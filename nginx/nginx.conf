## User and optional group (optional) used by worker processes
## Syntax:    user user [group];
user www-data;

## Ideally # of worker processes = # of CPUs or cores
## Set to auto to autodetect
## max clients = worker_processes * worker_connections
worker_processes auto;

## Defines a file that will store the process ID of the main process.
pid /run/nginx.pid;

## Maximum number of open file descriptors per process
## should be > worker_connections
# worker_rlimit_nofile 10240;

events {
    worker_connections 1024;
    ## If multi_accept is disabled, a worker process will accept one new connection at a time.
    ## Otherwise, a worker process will accept all new connections at a time.
    ## Default is off
    # multi_accept on;
}

http {

    ##
    ## Basic Settings
    ##

    ## Speed up file transfers by using sendfile() to copy directly
    ## between descriptors rather than using read()/write()
    sendfile on;

    ## Send a file in full packets
    tcp_nopush on;
    tcp_nodelay on;

    ## How long to allow each connection to stay idle.
    keepalive_timeout 15;

    types_hash_max_size 2048;
    server_names_hash_bucket_size 64;
    server_name_in_redirect off;

    ## don't send the nginx version number in error pages and Server header
    server_tokens off;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    ##
    ## Logging Settings
    ##

    ## Default log file
    ## (this is only used when you don't override access_log on a server{} level)
    access_log /var/log/nginx/access.log;
    ## Default error and access log files
    ## (this is only used when you don't override error_log on a server{} level)
    error_log /var/log/nginx/error.log warn;


    ##
    ## Gzip Settings
    ##

    ## Enable gzip compression
    gzip on;

    ## Disable it for IE6
    gzip_disable "msie6";

    ## Don't compress anything that's already small and unlikely to shrink much
    ## if at all (the default is 20 bytes, which is bad as that usually leads to
    ## larger files after gzipping).
    gzip_min_length 256;

    ## This should be turned on if pre-compressed copies (.gz) of static files exist
    ## If NOT it should be left off as it will cause extra I/O. Default is off
    # gzip_static on;

    ## Tell proxies to cache both the gzipped and regular version of a resource
    ## whenever the client's Accept-Encoding capabilities header varies;
    ## Avoids the issue where a non-gzip capable client (which is extremely rare
    ## today) would display gibberish if their proxy gave them the gzipped version.
    # gzip_vary on;

    ## Compress data even for clients that are connecting via proxies identified by the "Via" header
    gzip_proxied any;

    ## Compression level (1-9)
    ## 4 is a compromise between size and CPU usage
    gzip_comp_level 4;

    # gzip_buffers 16 8k;
    # gzip_http_version 1.1;
    gzip_types
        text/plain
        text/css
        text/javascript
        text/xml
        application/javascript
        application/x-javascript
        application/json
        application/atom+xml
        application/xml+rss
        application/xml;

    ##
    ## Define PHP via socket
    ##

    upstream php {
        server unix:/var/run/php5-fpm.sock;
    }
    ## don't expose that the PHP is being used. It can be stopped in php.ini (expose_php = Off)
    fastcgi_hide_header X-Powered-By;


    ##
    ## Fast-CGI Cache
    ##

    fastcgi_cache_path /tmp/nginx/cache levels=1:2 keys_zone=phpcache:2m inactive=5m max_size=8m;


    ##
    ## Virtual Host Configs
    ##

    include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/sites-enabled/*;
}

#mail {
#   # See sample authentication script at:
#   # http://wiki.nginx.org/ImapAuthenticateWithApachePhpScript
#
#   # auth_http localhost/auth.php;
#   # pop3_capabilities "TOP" "USER";
#   # imap_capabilities "IMAP4rev1" "UIDPLUS";
#
#   server {
#       listen     localhost:110;
#       protocol   pop3;
#       proxy      on;
#   }
#
#   server {
#       listen     localhost:143;
#       protocol   imap;
#       proxy      on;
#   }
#}
