## Don't allow the browser to render the page inside an frame or iframe
## and avoid clickjacking http://en.wikipedia.org/wiki/Clickjacking
add_header X-Frame-Options DENY;
## If frames or iframes are needed, use SAMEORIGIN or even set an uri with ALLOW-FROM uri
## https://developer.mozilla.org/en-US/docs/HTTP/X-Frame-Options
# add_header X-Frame-Options SAMEORIGIN;


## The only defined value, "nosniff", prevents Internet Explorer and Google Chrome from
## MIME-sniffing a response away from the declared content-type. This also applies to Google Chrome,
## when downloading extensions. This reduces exposure to drive-by download attacks and sites serving
## user uploaded content that, by clever naming, could be treated by MSIE as executable or dynamic HTML files.
## https://www.owasp.org/index.php/List_of_useful_HTTP_headers
add_header X-Content-Type-Options nosniff;


## This header enables the Cross-site scripting (XSS) filter built into most recent web browsers.
## It's usually enabled by default anyway, so the role of this header is to re-enable the filter for
## this particular website if it was disabled by the user.
## https://www.owasp.org/index.php/List_of_useful_HTTP_headers
add_header X-XSS-Protection "1; mode=block";

## This allows content only from our site, and javascript only from our site and google-analytics.
## If we want more we should
## http://www.html5rocks.com/en/tutorials/security/content-security-policy/
# add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-eval' https://www.google-analytics.com; object-src 'none'";
